{"ast":null,"code":"import _defineProperty from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/slvust/Documents/web/rocks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/slvust/Documents/web/rocks/client/src/components/ContactForm/ContactForm.js\";\nimport React, { Component } from 'react';\nimport Button from '../UI/Button/Button';\nimport styles from './ContactForm.module.css';\nimport Logo from \"../../assets/icons/contact.svg\";\nimport axios from 'axios';\nimport InputMask from 'react-input-mask';\nimport { nameSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { phoneSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { emailSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { productSvg } from '../../assets/icons/formIcons/icons.jsx';\nexport var ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      form: {\n        name: '',\n        email: '',\n        phone: '',\n        message: '',\n        product: _this.props.product\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"submitHandler\",\n    value: function () {\n      var _submitHandler = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(evt) {\n        var _this$state$form, name, email, phone, message, product;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                evt.preventDefault();\n                console.log('qq');\n                _this$state$form = this.state.form, name = _this$state$form.name, email = _this$state$form.email, phone = _this$state$form.phone, message = _this$state$form.message, product = _this$state$form.product;\n                _context.next = 5;\n                return axios.post('/api/form', {\n                  name: name,\n                  email: email,\n                  phone: phone,\n                  message: message,\n                  product: product\n                }).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error.response);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitHandler(_x) {\n        return _submitHandler.apply(this, arguments);\n      }\n\n      return submitHandler;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var inputChangeHandler = function inputChangeHandler(e) {\n        _this2.setState({\n          form: _objectSpread({}, _this2.state.form, _defineProperty({}, e.target.name, e.target.value))\n        });\n      };\n\n      var name,\n          phone,\n          email,\n          message,\n          product,\n          image = null;\n\n      if (this.props.name) {\n        name = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: styles.label,\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"\\u0412\\u0430\\u0448\\u0435 \\u0418\\u043C\\u044F:\"), React.createElement(\"span\", {\n          className: styles.iconSpan,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: styles.formField,\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          minLength: \"2\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          required: true,\n          onChange: inputChangeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), nameSvg));\n      }\n\n      if (this.props.phone) {\n        phone = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: styles.label,\n          htmlFor: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"\\u0412\\u0430\\u0448 \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"), React.createElement(\"span\", {\n          className: styles.iconSpan,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: styles.formField,\n          id: \"phone\",\n          name: \"phone\",\n          type: \"tel\",\n          pattern: \"7[0-9]{10}\",\n          placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          title: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C 11 \\u0446\\u0438\\u0444\\u0440 \\u0438 \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u0441\\u044F \\u0441 7\",\n          onChange: inputChangeHandler,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(InputMask, Object.assign({}, this.props, {\n          name: \"phone\",\n          mask: \"+7\\\\ (999)-999-9999\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), phoneSvg));\n      }\n\n      if (this.props.email) {\n        email = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: styles.label,\n          htmlFor: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"\\u0412\\u0430\\u0448 E-mail:\"), React.createElement(\"span\", {\n          className: styles.iconSpan,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: styles.formField,\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"E-mail\",\n          name: \"email\",\n          onChange: inputChangeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), emailSvg));\n      }\n\n      if (this.props.message) {\n        message = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: styles.label,\n          htmlFor: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435:\"), React.createElement(\"textarea\", {\n          className: styles.formField,\n          id: \"message\",\n          placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n          name: \"message\",\n          onChange: inputChangeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }));\n      }\n\n      if (this.props.product) {\n        product = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: styles.label,\n          htmlFor: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\"), React.createElement(\"span\", {\n          className: styles.iconSpan,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: [styles.formField, styles.product].join(' '),\n          id: \"product\",\n          type: \"text\",\n          value: this.props.product,\n          readOnly: \"readonly\",\n          name: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }), productSvg));\n      }\n\n      if (this.props.image) {\n        image = React.createElement(\"img\", {\n          className: styles.productImg,\n          src: this.props.image,\n          alt: \"test\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"form\", {\n        className: this.props.inner ? [styles.form, styles.inner].join(' ') : styles.form,\n        onSubmit: function onSubmit(evt) {\n          return _this2.submitHandler(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: styles.fieldset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: styles.legend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.logo,\n        src: Logo,\n        width: \"25\",\n        height: \"25\",\n        alt: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), this.props.title), image, product, name, phone, email, message, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.props.btnTitle)));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\nexport default ContactForm;","map":{"version":3,"sources":["/Users/slvust/Documents/web/rocks/client/src/components/ContactForm/ContactForm.js"],"names":["React","Component","Button","styles","axios","InputMask","nameSvg","phoneSvg","emailSvg","productSvg","ContactForm","state","form","name","email","phone","message","product","props","evt","preventDefault","console","log","post","then","response","catch","error","inputChangeHandler","e","setState","target","value","image","label","iconSpan","formField","join","productImg","inner","submitHandler","fieldset","legend","logo","Logo","title","btnTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../UI/Button/Button';\nimport styles from './ContactForm.module.css';\nimport Logo from '../../assets/icons/contact.svg';\nimport axios from 'axios';\nimport InputMask from 'react-input-mask';\n\nimport { nameSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { phoneSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { emailSvg } from '../../assets/icons/formIcons/icons.jsx';\nimport { productSvg } from '../../assets/icons/formIcons/icons.jsx';\n\nexport class ContactForm extends Component {\n  state = {\n    form: {\n      name: '',\n      email: '',\n      phone: '',\n      message: '',\n      product: this.props.product\n    }\n  };\n\n  async submitHandler(evt) {\n    evt.preventDefault();\n    console.log('qq');\n    const { name, email, phone, message, product } = this.state.form;\n\n    await axios\n      .post('/api/form', {\n        name,\n        email,\n        phone,\n        message,\n        product\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error.response);\n      });\n  }\n\n  render() {\n    const inputChangeHandler = e => {\n      this.setState({\n        form: {\n          ...this.state.form,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    let name,\n      phone,\n      email,\n      message,\n      product,\n      image = null;\n\n    if (this.props.name) {\n      name = (\n        <React.Fragment>\n          <label className={styles.label} htmlFor='name'>\n            Ваше Имя:\n          </label>\n          <span className={styles.iconSpan}>\n            <input\n              className={styles.formField}\n              id='name'\n              name='name'\n              type='text'\n              minLength='2'\n              placeholder='Имя'\n              required\n              onChange={inputChangeHandler}\n            />\n            {nameSvg}\n          </span>\n        </React.Fragment>\n      );\n    }\n    if (this.props.phone) {\n      phone = (\n        <React.Fragment>\n          <label className={styles.label} htmlFor='phone'>\n            Ваш Телефон:\n          </label>\n          <span className={styles.iconSpan}>\n            <input\n              className={styles.formField}\n              id='phone'\n              name='phone'\n              type='tel'\n              pattern='7[0-9]{10}'\n              placeholder='Телефон'\n              title='Номер должен содержать 11 цифр и начинатся с 7'\n              onChange={inputChangeHandler}\n              required\n            />\n            <InputMask {...this.props} name='phone' mask='+7\\ (999)-999-9999' />\n            {phoneSvg}\n          </span>\n        </React.Fragment>\n      );\n    }\n    if (this.props.email) {\n      email = (\n        <React.Fragment>\n          <label className={styles.label} htmlFor='email'>\n            Ваш E-mail:\n          </label>\n          <span className={styles.iconSpan}>\n            <input\n              className={styles.formField}\n              id='email'\n              type='email'\n              placeholder='E-mail'\n              name='email'\n              onChange={inputChangeHandler}\n            />\n            {emailSvg}\n          </span>\n        </React.Fragment>\n      );\n    }\n    if (this.props.message) {\n      message = (\n        <React.Fragment>\n          <label className={styles.label} htmlFor='message'>\n            Сообщение:\n          </label>\n          <textarea\n            className={styles.formField}\n            id='message'\n            placeholder='Сообщение'\n            name='message'\n            onChange={inputChangeHandler}\n          />\n        </React.Fragment>\n      );\n    }\n\n    if (this.props.product) {\n      product = (\n        <React.Fragment>\n          <label className={styles.label} htmlFor='product'>\n            Товар:\n          </label>\n          <span className={styles.iconSpan}>\n            <input\n              className={[styles.formField, styles.product].join(' ')}\n              id='product'\n              type='text'\n              value={this.props.product}\n              readOnly='readonly'\n              name='product'\n            />\n            {productSvg}\n          </span>\n        </React.Fragment>\n      );\n    }\n\n    if (this.props.image) {\n      image = (\n        <img className={styles.productImg} src={this.props.image} alt='test' />\n      );\n    }\n\n    return (\n      <form\n        className={\n          this.props.inner ? [styles.form, styles.inner].join(' ') : styles.form\n        }\n        onSubmit={evt => this.submitHandler(evt)}\n      >\n        <fieldset className={styles.fieldset}>\n          <legend className={styles.legend}>\n            <img\n              className={styles.logo}\n              src={Logo}\n              width='25'\n              height='25'\n              alt='test'\n            />\n            {this.props.title}\n          </legend>\n\n          {image}\n          {product}\n          {name}\n          {phone}\n          {email}\n          {message}\n\n          <Button type='submit'>{this.props.btnTitle}</Button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}